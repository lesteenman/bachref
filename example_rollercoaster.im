sorts: {
	Segment: struct(station, lift, main, braking, repair)
	Cart_Id: struct(cart1, cart2)
	SwitchPos: struct(up, down)
}

actors: {
	cart: {
		states: {
			pos: Segment
			open: Bool
			locked: Bool
		}

		instances: {
			cart1: {
				pos = braking
				open = false
				locked = false
			}
			cart2: {
				pos = repair
				open = false
				locked = false
			}
		}

		actions: {
			forward(Segment, Segment): {
				if (open == false) {
					-> pos, lift {
						pos = lift
					}
					-> pos, main {
						pos = main
					}
					-> pos, braking {
						pos = braking
					}
					-> pos, station {
						pos = station
					}
					-> pos, repair {
						pos = repair
					}
				}
			}

			backward(Segment, Segment): {
				if (open == false && pos == station) {
					-> station, repair {
						pos = repair
					}
				}
			}

			open_braces(Segment): {
				if (open == false && locked == false) {
					-> pos {
						open = true
					}
				}
			}

			close_braces(): {
				if (open == true) {
					-> {
						open = false
						locked = true
					}
				}
			}
		}

		guards: {
			cart: {
				forward: {
					if (pos == station) {
						-> Any(Segment), Not(Segment: station) {}
					}
					if (pos == lift) {
						-> Any(Segment), Not(Segment: lift) {}
					}
					if (pos == main) {
						-> Any(Segment), Not(Segment: lift, main) {}
					}
					if (pos == braking) {
						-> Any(Segment), Not(Segment: main) {}
					}
					if (pos == repair) {
						-> Any(Segment), Any(Segment) {}
					}
				}

				backward: {
					-> Any(Segment), Not(Segment: pos) {}
				}
			}
		}
	}

	track: {
		guards: {
			cart: {
				forward: {
					-> station, lift {}
					-> lift, main {}
					-> main, braking {}
					-> braking, station {}
					-> repair, station {}
				}

				backward: {
					-> station, repair {}
				}

				open_braces: {
					-> station {}
				}
			}
		}
	}

	switch: {
		states: {
			pos: SwitchPos
		}

		instances: {
			pos = down
		}

		actions: {
			up(): {
				if (pos == down) {
					-> { pos = up }
				}
			}
			down(): {
				if (pos == up) {
					-> { pos = down }
				}
			}
		}

		guards: {
			cart: {
				forward: {
					-> Any(Segment), Not(Segment: station) {}
					if (pos == up) {
						-> repair, station {}
					}
					if (pos == down) {
						-> braking, station {}
					}
				}

				backward: {
					-> Any(Segment), Not(Segment: braking, repair) {}
					if (pos == up) {
						-> station, braking {}
						-> station, repair {}
					}
				}
			}
		}
	}

	button: {
		states: {
			open: Bool
		}

		instances: {
			open = false
		}

		actions: {
			push_button(): {
				if (open == true) {
					-> {
						open = false
					}
				}
			}
		}

		guards: {
			cart: {
				open_braces: {
					if (open == false) {
						-> Any(Segment) {
							open = true
						}
					}
				}

				close_braces: {
					if (open == false) {
						-> {}
					}
				}

				forward: {
					if (open == false) {
						-> station, Any(Segment) {}
					}
					-> Not(Segment: station), Any(Segment) {}
				}
			}

			gate: {
				open: {
					if (open == true) {
						-> {}
					}
				}
			}
		}
	}

	gate: {
		instances: {
			open = false
		}

		states: {
			open: Bool
		}

		actions: {
			open(): {
				if (open == false) {
					-> {
						open = true
					}
				}
			}

			close(): {
				if (open == true) {
					-> {
						open = false
					}
				}
			}
		}

		guards: {
			cart: {
				forward: {
					-> Not(Segment: station), Any(Segment) {}
					if (open == false) {
						-> station, Any(Segment) {}
					}
				}

				backward: {
					-> Not(Segment: station), Any(Segment) {}
					if (open == false) {
						-> station, Any(Segment) {}
					}
				}
			}
		}
	}
}
